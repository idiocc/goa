<types namespace="_goa">
  <import from="http" name="IncomingMessage" desc="The first argument to the 'request' event." link="https://nodejs.org/api/http.html#http_class_http_incomingmessage" />
  <import from="http" name="ServerResponse" desc="The second parameter to the 'request' event." link="https://nodejs.org/api/http.html#http_response_socket" />

  <type interface name="Response" desc="The response API.">
    <prop type="_goa.Application" name="app">
      The reference to the application.
    </prop>
    <prop type="_goa.Context" name="ctx">
      The reference to the context instance.
    </prop>
    <prop type="_goa.Request" name="request">
      The reference to the request instance.
    </prop>
    <prop type="http.IncomingMessage" name="req">
      The message from the client.
    </prop>
    <prop type="http.ServerResponse" name="res">
      The response from the server.
    </prop>
    <prop type="function(string): void" name="attachment">
      Set Content-Disposition header to "attachment" with optional `filename`.
    </prop>
    <prop type="function(string, string=): void" name="redirect">
      Perform a 302 redirect to `url`. The string "back" is special-cased to provide Referrer support, when Referrer is not present `alt` or "/" is used. E.g., `this.redirect('back');`, `this.redirect('back', '/index.html');`, `this.redirect('/login');`, `this.redirect('http://google.com');`.
    </prop>
    <prop type="function" name="remove">
     1
    </prop>
    <prop type="function(string): void" name="vary">
       Vary on `field`.
    </prop>
    <prop type="function" name="set">
     1
    </prop>
    <prop type="function" name="append">
     1
    </prop>
    <prop type="function" name="flushHeaders">
     1
    </prop>
    <prop number name="status">
      Get/set response status code.
    </prop>
    <prop name="message">
      Get/set response status message.
    </prop>
    <prop type="string|!Buffer|!Object|!stream.Stream" name="body">
      Get/set response body.
    </prop>
    <prop number name="length">
      Return parsed response `Content-Length` when present. Set `Content-Length` field to `n`.
    </prop>
    <prop string name="type">
      Return the response mime type void of parameters such as "charset". Set Content-Type response header with `type` through `mime.lookup()` when it does not contain a charset. Examples: `this.type = '.html';`, `this.type = 'html';`, `this.type = 'json';`, `this.type = 'application/json';`, `this.type = 'png';`.
    </prop>
    <prop name="lastModified">
     1
    </prop>
    <prop name="etag">
     1
    </prop>
    <prop boolean name="headerSent">
      Check if a header has been written to the socket.
    </prop>
    <prop boolean name="writable">
     1
    </prop>
  </type>
</types>